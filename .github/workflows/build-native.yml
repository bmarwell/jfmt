permissions:
  contents: read
name: Build Native

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch: { }

jobs:
  build-linux-x64-musl:
    if: contains(github.event.head_commit.message, 'Releasing version') != true && contains(github.event.head_commit.message, 'Prepare next version') != true
    runs-on: ubuntu-latest
    environment: native-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v5.0.0
        with:
          java-version: 24
          distribution: 'graalvm'
          cache: maven

      - name: Retrieve musl toolchain from cache
        id: musl-toolchain-cache
        uses: actions/cache/restore@v4.3.0
        with:
          path: ~/.musl-toolchain
          key: jfmt-musl-toolchain-11

      - name: Get musl toolchain and compile libz against it
        shell: bash
        id: prepare-musl
        run: |
          mkdir -p ~/.musl-toolchain
          pushd ~/.musl-toolchain
          if [ ! -f x86_64-linux-musl-native.tgz ]; then
            curl \
                --silent \
                --show-error \
                --fail-with-body \
                --connect-timeout 5 \
                --max-time 50 \
                --retry 5 \
                --retry-delay 0 \
                --retry-max-time 40 \
                --user "${MUSL_TOOLCHAIN_USER}:${MUSL_TOOLCHAIN_PASS}" \
                --location \
                --remote-name \
                --remote-header-name \
                --url "${MUSL_TOOLCHAIN_LOCATION}/11/x86_64-linux-musl-native.tgz"
          fi
          popd
          
          TMP_DIR=$(mktemp -d)
          pushd $TMP_DIR
          tar -xvf ~/.musl-toolchain/x86_64-linux-musl-native.tgz
          
          curl -LOJ https://zlib.net/fossils/zlib-1.3.tar.gz
          tar -xzf zlib-1.3.tar.gz
          cd zlib-1.3
          
          TOOLCHAIN_DIR=$TMP_DIR/x86_64-linux-musl-native
          CC=$TOOLCHAIN_DIR/bin/gcc
          
          ./configure --prefix=$TOOLCHAIN_DIR --static
          make
          make install
          
          echo "TOOLCHAIN_DIR=$TOOLCHAIN_DIR" >> $GITHUB_OUTPUT
        env:
          MUSL_TOOLCHAIN_LOCATION: ${{ secrets.MUSL_TOOLCHAIN_LOCATION }}
          MUSL_TOOLCHAIN_USER: ${{ secrets.MUSL_TOOLCHAIN_USER }}
          MUSL_TOOLCHAIN_PASS: ${{ secrets.MUSL_TOOLCHAIN_PASS }}

      - name: Save musl toolchain to cache
        uses: actions/cache/save@v4.3.0
        with:
          path: ~/.musl-toolchain
          key: jfmt-musl-toolchain-11

      - name: Cache Maven packages
        id: restore-maven-package-cache
        uses: actions/cache/restore@v4.3.0
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build static native image for Linux
        run: |
          PATH="${TOOLCHAIN_DIR}/bin:${PATH}"
          export PATH
          ./mvnw -B -Pci,native,dist-linux package
        env:
          TOOLCHAIN_DIR: ${{ steps.prepare-musl.outputs.TOOLCHAIN_DIR }}

      - name: Save downloaded Maven packages
        uses: actions/cache/save@v4.3.0
        with:
          path: ~/.m2
          key: ${{ steps.restore-maven-package-cache.outputs.cache-primary-key }}
        if: github.event_name != 'pull_request'

  # 2nd part: build other platforms
  build-others:
    name: Build ${{ matrix.target }}
    needs: build-linux-x64-musl
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: macos-x64
            os: macos-13
            arch: x64
          - target: macos-aarch64
            os: macos-14
            arch: aarch64
          - target: windows-x64
            os: windows-2022
            arch: x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v5.0.0
        with:
          java-version: 24
          distribution: 'graalvm'
          cache: maven

      - name: Retrieve musl toolchain from cache
        id: musl-toolchain-cache
        if: matrix.os == 'ubuntu-latest'
        uses: actions/cache/restore@v4.3.0
        with:
          path: ~/.musl-toolchain
          key: jfmt-musl-toolchain-11

      - name: Get musl toolchain and compile libz against it
        id: prepare-musl
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p ~/.musl-toolchain
          pushd ~/.musl-toolchain
          if [ ! -f x86_64-linux-musl-native.tgz ]; then
            curl \
                --silent \
                --show-error \
                --fail-with-body \
                --connect-timeout 5 \
                --max-time 50 \
                --retry 5 \
                --retry-delay 0 \
                --retry-max-time 40 \
                --user "${MUSL_TOOLCHAIN_USER}:${MUSL_TOOLCHAIN_PASS}" \
                --location \
                --remote-name \
                --remote-header-name \
                "${MUSL_TOOLCHAIN_LOCATION}/11/x86_64-linux-musl-native.tgz"
          fi
          popd
          
          TMP_DIR=$(mktemp -d)
          pushd $TMP_DIR
          tar -xvf ~/.musl-toolchain/x86_64-linux-musl-native.tgz
          
          curl -LOJ https://zlib.net/fossils/zlib-1.3.tar.gz
          tar -xzf zlib-1.3.tar.gz
          cd zlib-1.3
          
          TOOLCHAIN_DIR=$TMP_DIR/x86_64-linux-musl-native
          CC=$TOOLCHAIN_DIR/bin/gcc
          
          ./configure --prefix=$TOOLCHAIN_DIR --static
          make
          make install
          
          echo "TOOLCHAIN_DIR=$TOOLCHAIN_DIR" >> $GITHUB_OUTPUT
        env:
          MUSL_TOOLCHAIN_LOCATION: ${{ secrets.MUSL_TOOLCHAIN_LOCATION }}
          MUSL_TOOLCHAIN_USER: ${{ secrets.MUSL_TOOLCHAIN_USER }}
          MUSL_TOOLCHAIN_PASS: ${{ secrets.MUSL_TOOLCHAIN_PASS }}

      - name: Save musl toolchain to cache
        uses: actions/cache/save@v4.3.0
        if: matrix.os == 'ubuntu-latest'
        with:
          path: ~/.musl-toolchain
          key: jfmt-musl-toolchain-11

      - name: Cache Maven packages
        id: restore-maven-package-cache
        uses: actions/cache/restore@v4.3.0
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build static native image for Linux
        run: |
          PATH="${TOOLCHAIN_DIR}/bin:${PATH}"
          export PATH
          ./mvnw --batch-mode -Pnative,dist-linux package
        env:
          TOOLCHAIN_DIR: ${{ steps.prepare-musl.outputs.TOOLCHAIN_DIR }}
        if: matrix.os == 'ubuntu-latest'

      - name: Build static native image for Windows / macOS
        shell: bash
        run: |
          ./mvnw --batch-mode -Pnative package
        if: matrix.os != 'ubuntu-latest'

      - name: Save downloaded Maven packages
        uses: actions/cache/save@v4.3.0
        with:
          path: ~/.m2
          key: ${{ steps.restore-maven-package-cache.outputs.cache-primary-key }}
        if: github.event_name != 'pull_request'

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: artifacts-${{ matrix.os }}
          path: |
            cli/target/distributions/*.zip
            cli/target/distributions/*.tar.gz
