<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.1.0 http://maven.apache.org/xsd/maven-4.1.0.xsd">
  <modelVersion>4.1.0</modelVersion>

  <parent>
    <groupId>io.github.bmarwell.jfmt</groupId>
    <artifactId>jfmt-root</artifactId>
  </parent>

  <artifactId>jfmt</artifactId>
  <packaging>jar</packaging>

  <name>jfmt :: cli</name>
  <properties>
    <main.class>io.github.bmarwell.jfmt.JFmt</main.class>
    <binary.name>${artifactId}</binary.name>

    <native.quick.build>false</native.quick.build>

    <!--set to empty for unix/mac-->
    <executable-suffix />

    <completions.dir>./usr/share/bash-completion/completions</completions.dir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli-jansi-graalvm</artifactId>
    </dependency>

    <dependency>
      <groupId>io.github.java-diff-utils</groupId>
      <artifactId>java-diff-utils</artifactId>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jdt</groupId>
      <artifactId>org.eclipse.jdt.core</artifactId>
      <version>3.43.0</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>info.picocli</groupId>
              <artifactId>picocli-codegen</artifactId>
              <version>${picocli.version}</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli-codegen</artifactId>
            <version>${picocli.version}</version>
            <type>jar</type>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>generate-autocompletion-script</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>-Dpicocli.autocomplete.systemExitOnError=true</argument>
                <argument>-cp</argument>
                <classpath />
                <argument>picocli.AutoComplete</argument>
                <argument>--force</argument>
                <argument>--completionScript</argument>
                <argument>${project.build.directory}/${binary.name}_completion.sh</argument>
                <argument>${main.class}</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>generateManPages</id>
            <goals>
              <goal>java</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <includeProjectDependencies>true</includeProjectDependencies>
              <includePluginDependencies>true</includePluginDependencies>
              <mainClass>picocli.codegen.docgen.manpage.ManPageGenerator</mainClass>
              <arguments>
                <argument>--outdir=${project.build.directory}/generated-picocli-docs</argument>
                <argument>${main.class}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <configuration>
          <sourceDirectory>${project.build.directory}/generated-picocli-docs</sourceDirectory>
        </configuration>
        <executions>
          <execution>
            <id>output-html</id>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <sourceHighlighter>coderay</sourceHighlighter>
              <backend>html5</backend>
              <outputDirectory>${project.build.directory}/generated-docs/usr/share/doc</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>output-manpage</id>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <sourceHighlighter>coderay</sourceHighlighter>
              <backend>manpage</backend>
              <outputDirectory>${project.build.directory}/generated-docs/usr/share/man/man1</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-third-party-licenses</id>
            <goals>
              <goal>add-third-party</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <encoding>UTF-8</encoding>
              <excludedScopes>test,provided</excludedScopes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>collect-dependencies</id>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <includeScope>runtime</includeScope>
              <outputDirectory>${project.build.directory}/libs</outputDirectory>
              <prependGroupId>true</prependGroupId>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jreleaser</groupId>
        <artifactId>jreleaser-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble-archive</id>
            <goals>
              <goal>assemble</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <jreleaser>
                <project>
                  <links>
                    <homepage>https://github.com/bmarwell/jfmt</homepage>
                  </links>
                </project>
                <assemble>
                  <javaArchive>
                    <jfmt>
                      <active>ALWAYS</active>
                      <stereotype>DESKTOP</stereotype>
                      <formats>
                        <format>ZIP</format>
                        <format>TGZ</format>
                      </formats>
                      <options>
                        <longFileMode>POSIX</longFileMode>
                        <bigNumberMode>POSIX</bigNumberMode>
                      </options>
                      <java>
                        <mainClass>${main.class}</mainClass>
                      </java>
                      <mainJar>
                        <path>${project.build.directory}/${project.build.finalName}.jar</path>
                      </mainJar>
                      <fileSets>
                        <fileSet>
                          <input>${project.build.directory}/libs/</input>
                          <output>lib/</output>
                          <includes>
                            <include>*.jar</include>
                          </includes>
                        </fileSet>
                        <fileSet>
                          <input>${project.build.directory}/generated-sources/license</input>
                          <output>etc/</output>
                          <includes>
                            <include>*.txt</include>
                          </includes>
                        </fileSet>
                        <fileSet>
                          <input>${project.build.directory}</input>
                          <output>${completions.dir}</output>
                          <includes>
                            <include>${binary.name}_completion.sh</include>
                          </includes>
                        </fileSet>
                        <fileSet>
                          <input>${project.build.directory}/generated-docs/</input>
                          <output>./</output>
                        </fileSet>
                        <fileSet>
                          <input>${project.build.directory}/generated-picocli-docs/</input>
                          <output>./usr/share/doc/</output>
                        </fileSet>
                        <fileSet>
                          <input>${maven.multiModuleProjectDirectory}</input>
                          <output>./</output>
                          <includes>
                            <include>LICENSE.*</include>
                          </includes>
                        </fileSet>
                      </fileSets>
                    </jfmt>
                  </javaArchive>
                </assemble>
              </jreleaser>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-jreleaser-archive</id>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${project.build.directory}/jreleaser/assemble/${project.artifactId}/java-archive/${project.artifactId}-${project.version}.tgz</file>
                  <type>tgz</type>
                  <classifier>distribution</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>quick</id>
      <properties>
        <native.quick.build>true</native.quick.build>
      </properties>
    </profile>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <mainClass>${main.class}</mainClass>
              <quickBuild>${native.quick.build}</quickBuild>
              <imageName>${project.artifactId}-${project.version}</imageName>
              <agentResourceDirectory>${project.basedir}/src/main/graalvm-native</agentResourceDirectory>
              <buildArgs>
                <buildArg>--strict-image-heap</buildArg>
                <buildArg>--initialize-at-build-time=org.eclipse.jdt.internal.compiler,org.eclipse.jdt.internal.compiler.util</buildArg>
              </buildArgs>

              <jvmArgs>
                <jvmArg>-Duser.language=en</jvmArg>
                <jvmArg>-Duser.country=US</jvmArg>
              </jvmArgs>

              <systemProperties>
                <user.language>en</user.language>
                <user.country>US</user.country>
              </systemProperties>
            </configuration>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>assemble-native-distribution</id>
                <goals>
                  <goal>single</goal>
                </goals>
                <phase>package</phase>
                <configuration combine.self="merge">
                  <skipAssembly>false</skipAssembly>
                  <descriptors>
                    <descriptor>src/main/assembly/assembly-native.xml</descriptor>
                  </descriptors>
                  <outputDirectory>${project.build.directory}/distributions</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>dist-linux</id>
      <activation>
        <os>
          <family>linux</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <!-- as of Maven 4.0.0-rc-4, combine.* does not work -->
            <configuration combine.children="merge">
              <buildArgs>
                <buildArg>--static</buildArg>
                <buildArg>-march=compatibility</buildArg>
                <buildArg>--libc=musl</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>dist-windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <!-- not used in POM, but used in assembly descriptors -->
        <executable-suffix>.exe</executable-suffix>
      </properties>
    </profile>
  </profiles>

</project>
